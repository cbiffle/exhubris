// STM32 core driver IPC interface for STM32G0.

interface "stm32g0-sys"

// Common types for talking about pins:

enum "Port" {
    doc "A GPIO port name."

    case "A"
    case "B"
    case "C"
    case "D"
    // GPIOE not implemented on current target parts
    case "F"

    rust-derive "Copy" "Clone" "Debug"
}

enum "Function" {
    doc "An alternate function index for a pin."

    case "AF0"
    case "AF1"
    case "AF2"
    case "AF3"
    case "AF4"
    case "AF5"
    case "AF6"
    case "AF7"

    rust-derive "Copy" "Clone" "Debug"
}

// Operations:

method "set_pin_output" {
    doc "Configures a pin into output mode."

    operation 0
    arg "port" "Port"
    arg "pin" "u8"
    auto-retry
}

method "set_pin_high" {
    doc "Sets a pin's output state to high. This won't have any immediate
         effect unless the pin is in output mode."

    operation 1
    arg "port" "Port"
    arg "pin" "u8"
    auto-retry
}

method "set_pin_low" {
    doc "Sets a pin's output state to low. This won't have any immediate
         effect unless the pin is in output mode."

    operation 2
    arg "port" "Port"
    arg "pin" "u8"
    auto-retry
}

method "toggle_pin" {
    doc "Inverts a pin's output state. This won't have any immediate effect
         unless the pin is in output mode."

    operation 3
    arg "port" "Port"
    arg "pin" "u8"
    auto-retry
}

method "set_pin_alternate_mode" {
    doc "Configures a pin into Alternate mode, selecting a specific alternate
         function index."

    operation 4
    arg "port" "Port"
    arg "pin" "u8"
    arg "function" "Function"
    auto-retry
}

method "enable_clock" {
    doc "Enables the clock signal to a peripheral."

    operation 5
    arg "peripheral" "PeripheralName"
    auto-retry
}

enum "PeripheralName" {
    doc "An enumeration of all RCC-controlled peripherals on the chip."

    case "Usart2" 0b10_10001

    rust-derive "Copy" "Clone" "Debug"
}
